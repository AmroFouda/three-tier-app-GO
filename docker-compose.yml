services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: blog
      MYSQL_USER: bloguser
      #MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD_FILE: /run/secrets/db-password

    volumes:
      - db-data:/var/lib/mysql


    secrets:
      - db-password 

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: bloguser
      # DB_PASSWORD_FILE: /run/db-password
      DB_PASSWORD_FILE: /run/secrets/db-password

      DB_NAME: blog
    secrets:
      - db-password
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health" ]
      # test: ["CMD", "wget", "--no-check-certificate", "-qO-", "https://localhost:443" ]

      interval: 10s
      timeout: 5s
      retries: 5

  proxy:
    build:
      context: ./nginx
    depends_on:
      - backend
    ports:
      - "8443:443"   # access via https://localhost:8443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/ssl/certs:ro
    healthcheck:
      #test: ["CMD", "wget", "--no-check-certificate", "-qO-", "https://localhost:443" ]
      test: ["CMD", "wget", "-qO-", "http://localhost"]

      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:

# secrets:
#   db_password:
#     file: ./db-password.txt
# secrets:
#   - db-password

secrets:
  db-password:
    file: ./db-password.txt
